      In file included from /git/Thesis/src/lib/Maze_Bindings.cpp:2:
      /tmp/pip-build-env-kj9y8xdb/overlay/lib/python3.12/site-packages/pybind11/include/pybind11/pybind11.h:1620:13: note: candidate: ‘template<class Func, class ... Extra> pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const char*, Func&&, const Extra& ...) [with Extra = Func; type_ = Cell; options = {}]’
       1620 |     class_ &def(const char *name_, Func &&f, const Extra &...extra) {
            |             ^~~
      /tmp/pip-build-env-kj9y8xdb/overlay/lib/python3.12/site-packages/pybind11/include/pybind11/pybind11.h:1620:13: note:   template argument deduction/substitution failed:
      /git/Thesis/src/lib/Maze_Bindings.cpp:27:13: note:   couldn’t deduce template parameter ‘Func’
         21 |     py::class_<Cell>(M, "Cell")
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~
         22 |         .def(py::init<>())
            |         ~~~~~~~~~~~~~~~~~~
         23 |         .def("up", &Cell::up)
            |         ~~~~~~~~~~~~~~~~~~~~~
         24 |         .def("down", &Cell::down)
            |         ~~~~~~~~~~~~~~~~~~~~~~~~~
         25 |         .def("left", &Cell::left)
            |         ~~~~~~~~~~~~~~~~~~~~~~~~~
         26 |         .def("right", &Cell::right)
            |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
         27 |         .def("val", &Cell::val, "get a numeric value of this cells current state")
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-kj9y8xdb/overlay/lib/python3.12/site-packages/pybind11/include/pybind11/pybind11.h:1645:13: note: candidate: ‘template<class T, class ... Extra, typename std::enable_if<T::op_enable_if_hook, int>::type <anonymous> > pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const T&, const Extra& ...) [with Extra = T; typename std::enable_if<T::op_enable_if_hook, int>::type <anonymous> = {Extra ...}; type_ = Cell; options = {}]’
       1645 |     class_ &def(const T &op, const Extra &...extra) {
            |             ^~~
      /tmp/pip-build-env-kj9y8xdb/overlay/lib/python3.12/site-packages/pybind11/include/pybind11/pybind11.h:1645:13: note:   template argument deduction/substitution failed:
      /tmp/pip-build-env-kj9y8xdb/overlay/lib/python3.12/site-packages/pybind11/include/pybind11/pybind11.h:1644:95: error: ‘op_enable_if_hook’ is not a member of ‘char [4]’
       1644 |     template <typename T, typename... Extra, detail::enable_if_t<T::op_enable_if_hook, int> = 0>
            |                                                                                               ^
      /tmp/pip-build-env-kj9y8xdb/overlay/lib/python3.12/site-packages/pybind11/include/pybind11/pybind11.h:1657:13: note: candidate: ‘template<class ... Args, class ... Extra> pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::constructor<Args ...>&, const Extra& ...) [with Args = {Args ...}; Extra = {Extra ...}; type_ = Cell; options = {}]’
       1657 |     class_ &def(const detail::initimpl::constructor<Args...> &init, const Extra &...extra) {
            |             ^~~
      /tmp/pip-build-env-kj9y8xdb/overlay/lib/python3.12/site-packages/pybind11/include/pybind11/pybind11.h:1657:13: note:   template argument deduction/substitution failed:
      /git/Thesis/src/lib/Maze_Bindings.cpp:27:13: note:   mismatched types ‘const pybind11::detail::initimpl::constructor<Args ...>’ and ‘const char [4]’
         21 |     py::class_<Cell>(M, "Cell")
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~
         22 |         .def(py::init<>())
            |         ~~~~~~~~~~~~~~~~~~
         23 |         .def("up", &Cell::up)
            |         ~~~~~~~~~~~~~~~~~~~~~
         24 |         .def("down", &Cell::down)
            |         ~~~~~~~~~~~~~~~~~~~~~~~~~
         25 |         .def("left", &Cell::left)
            |         ~~~~~~~~~~~~~~~~~~~~~~~~~
         26 |         .def("right", &Cell::right)
            |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
         27 |         .def("val", &Cell::val, "get a numeric value of this cells current state")
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-kj9y8xdb/overlay/lib/python3.12/site-packages/pybind11/include/pybind11/pybind11.h:1664:13: note: candidate: ‘template<class ... Args, class ... Extra> pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(const pybind11::detail::initimpl::alias_constructor<Args ...>&, const Extra& ...) [with Args = {Args ...}; Extra = {Extra ...}; type_ = Cell; options = {}]’
       1664 |     class_ &def(const detail::initimpl::alias_constructor<Args...> &init, const Extra &...extra) {
            |             ^~~
      /tmp/pip-build-env-kj9y8xdb/overlay/lib/python3.12/site-packages/pybind11/include/pybind11/pybind11.h:1664:13: note:   template argument deduction/substitution failed:
      /git/Thesis/src/lib/Maze_Bindings.cpp:27:13: note:   mismatched types ‘const pybind11::detail::initimpl::alias_constructor<Args ...>’ and ‘const char [4]’
         21 |     py::class_<Cell>(M, "Cell")
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~
         22 |         .def(py::init<>())
            |         ~~~~~~~~~~~~~~~~~~
         23 |         .def("up", &Cell::up)
            |         ~~~~~~~~~~~~~~~~~~~~~
         24 |         .def("down", &Cell::down)
            |         ~~~~~~~~~~~~~~~~~~~~~~~~~
         25 |         .def("left", &Cell::left)
            |         ~~~~~~~~~~~~~~~~~~~~~~~~~
         26 |         .def("right", &Cell::right)
            |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
         27 |         .def("val", &Cell::val, "get a numeric value of this cells current state")
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-kj9y8xdb/overlay/lib/python3.12/site-packages/pybind11/include/pybind11/pybind11.h:1671:13: note: candidate: ‘template<class ... Args, class ... Extra> pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(pybind11::detail::initimpl::factory<Args ...>&&, const Extra& ...) [with Args = {Args ...}; Extra = {Extra ...}; type_ = Cell; options = {}]’
       1671 |     class_ &def(detail::initimpl::factory<Args...> &&init, const Extra &...extra) {
            |             ^~~
      /tmp/pip-build-env-kj9y8xdb/overlay/lib/python3.12/site-packages/pybind11/include/pybind11/pybind11.h:1671:13: note:   template argument deduction/substitution failed:
      /git/Thesis/src/lib/Maze_Bindings.cpp:27:13: note:   mismatched types ‘pybind11::detail::initimpl::factory<Args ...>’ and ‘const char [4]’
         21 |     py::class_<Cell>(M, "Cell")
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~
         22 |         .def(py::init<>())
            |         ~~~~~~~~~~~~~~~~~~
         23 |         .def("up", &Cell::up)
            |         ~~~~~~~~~~~~~~~~~~~~~
         24 |         .def("down", &Cell::down)
            |         ~~~~~~~~~~~~~~~~~~~~~~~~~
         25 |         .def("left", &Cell::left)
            |         ~~~~~~~~~~~~~~~~~~~~~~~~~
         26 |         .def("right", &Cell::right)
            |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
         27 |         .def("val", &Cell::val, "get a numeric value of this cells current state")
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      /tmp/pip-build-env-kj9y8xdb/overlay/lib/python3.12/site-packages/pybind11/include/pybind11/pybind11.h:1677:13: note: candidate: ‘template<class ... Args, class ... Extra> pybind11::class_<type_, options>& pybind11::class_<type_, options>::def(pybind11::detail::initimpl::pickle_factory<Args ...>&&, const Extra& ...) [with Args = {Args ...}; Extra = {Extra ...}; type_ = Cell; options = {}]’
       1677 |     class_ &def(detail::initimpl::pickle_factory<Args...> &&pf, const Extra &...extra) {
            |             ^~~
      /tmp/pip-build-env-kj9y8xdb/overlay/lib/python3.12/site-packages/pybind11/include/pybind11/pybind11.h:1677:13: note:   template argument deduction/substitution failed:
      /git/Thesis/src/lib/Maze_Bindings.cpp:27:13: note:   mismatched types ‘pybind11::detail::initimpl::pickle_factory<Args ...>’ and ‘const char [4]’
         21 |     py::class_<Cell>(M, "Cell")
            |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~
         22 |         .def(py::init<>())
            |         ~~~~~~~~~~~~~~~~~~
         23 |         .def("up", &Cell::up)
            |         ~~~~~~~~~~~~~~~~~~~~~
         24 |         .def("down", &Cell::down)
            |         ~~~~~~~~~~~~~~~~~~~~~~~~~
         25 |         .def("left", &Cell::left)
            |         ~~~~~~~~~~~~~~~~~~~~~~~~~
         26 |         .def("right", &Cell::right)
            |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
         27 |         .def("val", &Cell::val, "get a numeric value of this cells current state")
            |         ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      In file included from /git/Thesis/src/lib/Maze_Bindings.cpp:6:
      /git/Thesis/src/lib/../include/Maze.hpp: In instantiation of ‘void Maze<Mazeable>::set(int, int, const Cell&) [with Mazeable = std::shared_ptr<Cell []>]’:
      /git/Thesis/src/lib/Maze_Bindings.cpp:41:61:   required from here
         41 |         .def("__setitem__", &Maze<std::shared_ptr<Cell[]>>::set)
            |                                                             ^~~
      /git/Thesis/src/lib/../include/Maze.hpp:124:75: error: no match for ‘operator=’ (operand types are ‘Maze<std::shared_ptr<Cell []> >’ and ‘const Cell’)
        124 |     void set (int row, int col, const Cell& cell) { this[row * wid + col] = cell; }
            |                                                     ~~~~~~~~~~~~~~~~~~~~~~^~~~~~
      /git/Thesis/src/lib/../include/Maze.hpp:24:7: note: candidate: ‘Maze<std::shared_ptr<Cell []> >& Maze<std::shared_ptr<Cell []> >::operator=(const Maze<std::shared_ptr<Cell []> >&)’
         24 | class Maze
            |       ^~~~
      /git/Thesis/src/lib/../include/Maze.hpp:24:7: note:   no known conversion for argument 1 from ‘const Cell’ to ‘const Maze<std::shared_ptr<Cell []> >&’
      /git/Thesis/src/lib/../include/Maze.hpp:24:7: note: candidate: ‘Maze<std::shared_ptr<Cell []> >& Maze<std::shared_ptr<Cell []> >::operator=(Maze<std::shared_ptr<Cell []> >&&)’
      /git/Thesis/src/lib/../include/Maze.hpp:24:7: note:   no known conversion for argument 1 from ‘const Cell’ to ‘Maze<std::shared_ptr<Cell []> >&&’
      /git/Thesis/src/lib/../include/Maze.hpp: In instantiation of ‘void Maze<Mazeable>::connect(int, int) [with Mazeable = std::shared_ptr<Cell []>]’:
      /git/Thesis/src/lib/Maze_Bindings.cpp:42:57:   required from here
         42 |         .def("connect", &Maze<std::shared_ptr<Cell[]>>::connect)
            |                                                         ^~~~~~~
      /git/Thesis/src/lib/../include/Maze.hpp:139:28: error: ‘class Maze<std::shared_ptr<Cell []> >’ has no member named ‘setDirection’; did you mean ‘getDirection’?
        139 |                 this[idx1].setDirection(src_side, UP);
            |                 ~~~~~~~~~~~^~~~~~~~~~~~
            |                 getDirection
      /git/Thesis/src/lib/../include/Maze.hpp:140:28: error: ‘class Maze<std::shared_ptr<Cell []> >’ has no member named ‘setDirection’; did you mean ‘getDirection’?
        140 |                 this[idx2].setDirection(src_side, DOWN);
            |                 ~~~~~~~~~~~^~~~~~~~~~~~
            |                 getDirection
      /git/Thesis/src/lib/../include/Maze.hpp:143:28: error: ‘class Maze<std::shared_ptr<Cell []> >’ has no member named ‘setDirection’; did you mean ‘getDirection’?
        143 |                 this[idx1].setDirection(src_side, DOWN);
            |                 ~~~~~~~~~~~^~~~~~~~~~~~
            |                 getDirection
      /git/Thesis/src/lib/../include/Maze.hpp:144:28: error: ‘class Maze<std::shared_ptr<Cell []> >’ has no member named ‘setDirection’; did you mean ‘getDirection’?
        144 |                 this[idx2].setDirection(src_side, UP);
            |                 ~~~~~~~~~~~^~~~~~~~~~~~
            |                 getDirection
      /git/Thesis/src/lib/../include/Maze.hpp:147:28: error: ‘class Maze<std::shared_ptr<Cell []> >’ has no member named ‘setDirection’; did you mean ‘getDirection’?
        147 |                 this[idx1].setDirection(src_side, LEFT);
            |                 ~~~~~~~~~~~^~~~~~~~~~~~
            |                 getDirection
      /git/Thesis/src/lib/../include/Maze.hpp:148:28: error: ‘class Maze<std::shared_ptr<Cell []> >’ has no member named ‘setDirection’; did you mean ‘getDirection’?
        148 |                 this[idx2].setDirection(dst_side, RIGHT);
            |                 ~~~~~~~~~~~^~~~~~~~~~~~
            |                 getDirection
      /git/Thesis/src/lib/../include/Maze.hpp:151:28: error: ‘class Maze<std::shared_ptr<Cell []> >’ has no member named ‘setDirection’; did you mean ‘getDirection’?
        151 |                 this[idx1].setDirection(src_side, RIGHT);
            |                 ~~~~~~~~~~~^~~~~~~~~~~~
            |                 getDirection
      /git/Thesis/src/lib/../include/Maze.hpp:152:28: error: ‘class Maze<std::shared_ptr<Cell []> >’ has no member named ‘setDirection’; did you mean ‘getDirection’?
        152 |                 this[idx2].setDirection(dst_side, LEFT);
            |                 ~~~~~~~~~~~^~~~~~~~~~~~
            |                 getDirection
      /git/Thesis/src/lib/../include/Maze.hpp: In instantiation of ‘bool Maze<Mazeable>::inMaze(int) [with Mazeable = std::shared_ptr<Cell []>]’:
      /git/Thesis/src/lib/Maze_Bindings.cpp:46:56:   required from here
         46 |         .def("inMaze", &Maze<std::shared_ptr<Cell[]>>::inMaze)
            |                                                        ^~~~~~
      /git/Thesis/src/lib/../include/Maze.hpp:263:62: error: ‘class Maze<std::shared_ptr<Cell []> >’ has no member named ‘val’
        263 |     bool inMaze (int idx) { return hasIndex(idx) ? this[idx].val(getSide(idx)) != 0 : false; }
            |                                                    ~~~~~~~~~~^~~
      In file included from /git/Thesis/src/lib/Maze_Bindings.cpp:8:
      /git/Thesis/src/lib/../include/Wilsons.hpp: In instantiation of ‘void Wilsons<Mazeable>::run(bool) [with Mazeable = std::shared_ptr<Cell []>]’:
      /git/Thesis/src/lib/Maze_Bindings.cpp:52:56:   required from here
         52 |         .def("run", &Wilsons<std::shared_ptr<Cell[]>>::run);
            |                                                        ^~~
      /git/Thesis/src/lib/../include/Wilsons.hpp:45:31: error: invalid use of member function ‘bool Cell::left(Side)’ (did you forget the ‘()’ ?)
         45 |       if (!open_ends) { mz[0].left = 0; }
            |                         ~~~~~~^~~~
      /git/Thesis/src/lib/../include/Wilsons.hpp: In instantiation of ‘void Wilsons<Mazeable>::run(bool) [with Mazeable = std::span<Cell>]’:
      /git/Thesis/src/lib/Maze_Bindings.cpp:60:48:   required from here
         60 |         .def("run", &Wilsons<std::span<Cell>>::run);
            |                                                ^~~
      /git/Thesis/src/lib/../include/Wilsons.hpp:45:31: error: invalid use of member function ‘bool Cell::left(Side)’ (did you forget the ‘()’ ?)
         45 |       if (!open_ends) { mz[0].left = 0; }
            |                         ~~~~~~^~~~
      /git/Thesis/src/lib/../include/Maze.hpp: In instantiation of ‘bool Maze<Mazeable>::inMaze(int) [with Mazeable = std::span<Cell>]’:
      /git/Thesis/src/lib/../include/Wilsons.hpp:66:24:   required from ‘int Wilsons<Mazeable>::pickStartIdx() [with Mazeable = std::span<Cell>]’
         66 |          if (!mz.inMaze(i)) { return i; }
            |               ~~~~~~~~~^~~
      /git/Thesis/src/lib/../include/Wilsons.hpp:36:22:   required from ‘void Wilsons<Mazeable>::run(bool) [with Mazeable = std::span<Cell>]’
         36 |       int startIdx = pickStartIdx();
            |                      ^~~~~~~~~~~~
      /git/Thesis/src/lib/Maze_Bindings.cpp:60:48:   required from here
         60 |         .def("run", &Wilsons<std::span<Cell>>::run);
            |                                                ^~~
      /git/Thesis/src/lib/../include/Maze.hpp:263:62: error: ‘class Maze<std::span<Cell> >’ has no member named ‘val’
        263 |     bool inMaze (int idx) { return hasIndex(idx) ? this[idx].val(getSide(idx)) != 0 : false; }
            |                                                    ~~~~~~~~~~^~~
      /git/Thesis/src/lib/../include/Maze.hpp: In instantiation of ‘void Maze<Mazeable>::connect(int, int) [with Mazeable = std::span<Cell>]’:
      /git/Thesis/src/lib/../include/Wilsons.hpp:130:20:   required from ‘void Wilsons<Mazeable>::updateMaze(int) [with Mazeable = std::span<Cell>]’
        130 |          mz.connect(curIdx, nextIdx);
            |          ~~~~~~~~~~^~~~~~~~~~~~~~~~~
      /git/Thesis/src/lib/../include/Wilsons.hpp:41:10:   required from ‘void Wilsons<Mazeable>::run(bool) [with Mazeable = std::span<Cell>]’
         41 |          updateMaze(startIdx);
            |          ^~~~~~~~~~
      /git/Thesis/src/lib/Maze_Bindings.cpp:60:48:   required from here
         60 |         .def("run", &Wilsons<std::span<Cell>>::run);
            |                                                ^~~
      /git/Thesis/src/lib/../include/Maze.hpp:139:28: error: ‘class Maze<std::span<Cell> >’ has no member named ‘setDirection’; did you mean ‘getDirection’?
        139 |                 this[idx1].setDirection(src_side, UP);
            |                 ~~~~~~~~~~~^~~~~~~~~~~~
            |                 getDirection
      /git/Thesis/src/lib/../include/Maze.hpp:140:28: error: ‘class Maze<std::span<Cell> >’ has no member named ‘setDirection’; did you mean ‘getDirection’?
        140 |                 this[idx2].setDirection(src_side, DOWN);
            |                 ~~~~~~~~~~~^~~~~~~~~~~~
            |                 getDirection
      /git/Thesis/src/lib/../include/Maze.hpp:143:28: error: ‘class Maze<std::span<Cell> >’ has no member named ‘setDirection’; did you mean ‘getDirection’?
        143 |                 this[idx1].setDirection(src_side, DOWN);
            |                 ~~~~~~~~~~~^~~~~~~~~~~~
            |                 getDirection
      /git/Thesis/src/lib/../include/Maze.hpp:144:28: error: ‘class Maze<std::span<Cell> >’ has no member named ‘setDirection’; did you mean ‘getDirection’?
        144 |                 this[idx2].setDirection(src_side, UP);
            |                 ~~~~~~~~~~~^~~~~~~~~~~~
            |                 getDirection
      /git/Thesis/src/lib/../include/Maze.hpp:147:28: error: ‘class Maze<std::span<Cell> >’ has no member named ‘setDirection’; did you mean ‘getDirection’?
        147 |                 this[idx1].setDirection(src_side, LEFT);
            |                 ~~~~~~~~~~~^~~~~~~~~~~~
            |                 getDirection
      /git/Thesis/src/lib/../include/Maze.hpp:148:28: error: ‘class Maze<std::span<Cell> >’ has no member named ‘setDirection’; did you mean ‘getDirection’?
        148 |                 this[idx2].setDirection(dst_side, RIGHT);
            |                 ~~~~~~~~~~~^~~~~~~~~~~~
            |                 getDirection
      /git/Thesis/src/lib/../include/Maze.hpp:151:28: error: ‘class Maze<std::span<Cell> >’ has no member named ‘setDirection’; did you mean ‘getDirection’?
        151 |                 this[idx1].setDirection(src_side, RIGHT);
            |                 ~~~~~~~~~~~^~~~~~~~~~~~
            |                 getDirection
      /git/Thesis/src/lib/../include/Maze.hpp:152:28: error: ‘class Maze<std::span<Cell> >’ has no member named ‘setDirection’; did you mean ‘getDirection’?
        152 |                 this[idx2].setDirection(dst_side, LEFT);
            |                 ~~~~~~~~~~~^~~~~~~~~~~~
            |                 getDirection
      ninja: build stopped: subcommand failed.
      
      *** CMake build failed
      [end of output]
  
  note: This error originates from a subprocess, and is likely not a problem with pip.
  ERROR: Failed building editable for maze
Failed to build maze
ERROR: ERROR: Failed to build installable wheels for some pyproject.toml based projects (maze)
